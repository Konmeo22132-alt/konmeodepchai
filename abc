repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer

if not getgenv().Config then
    getgenv().Config = {Weapon = "Melee", Boss = "Cursed Captain"}
end
if not getgenv().Team then getgenv().Team = "Marines" end
if getgenv().FarmActive==nil then getgenv().FarmActive=true end

local PLACE_WORLD = {World1=2753915549, World2=4442272183, World3=7449423635}
local JOBFILE = "JobIds.txt"
local MeleeList = {"Combat","Dark Step","Electric","Water Kung Fu","Dragon Breath","Super Human","Death Step","Sharkman Karate","Electric Claw","Dragon Talon","Godhuman","Sanguine Art"}

local MMon = { "Ship Deckhand", "Ship Engineer", "Ship Steward", "Ship Officer" }
local MPos = CFrame.new(911.35827636719, 125.95812988281, 33159.5390625)

local function currentWorld()
    local pid = game.PlaceId
    if pid == PLACE_WORLD.World1 then return "World1" end
    if pid == PLACE_WORLD.World2 then return "World2" end
    if pid == PLACE_WORLD.World3 then return "World3" end
    return nil
end

local function targetWorldForBoss(bossName)
    local n = string.lower(tostring(bossName))
    if n:find("rip") or n:find("dough") then return "World3" end
    if n:find("cursed") then return "World2" end
    return nil
end

local function HasItem(name)
    for _,v in pairs(LocalPlayer.Backpack:GetChildren()) do if v.Name==name then return true end end
    for _,v in pairs(LocalPlayer.Character and LocalPlayer.Character:GetChildren() or {}) do if v.Name==name then return true end end
    return false
end

local function EquipPreferred()
    local char = LocalPlayer.Character
    if not char then return end
    local backpack = LocalPlayer.Backpack
    if getgenv().Config.Weapon=="Melee" then
        for _,m in ipairs(MeleeList) do
            if backpack:FindFirstChild(m) then pcall(function() char.Humanoid:EquipTool(backpack[m]) end) return end
            if char:FindFirstChild(m) then return end
        end
    elseif getgenv().Config.Weapon=="Sword" then
        for _,tool in ipairs(backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.ToolTip=="Sword" then pcall(function() char.Humanoid:EquipTool(tool) end) return end
        end
    end
end

local function AutoHaki()
    pcall(function() if LocalPlayer.Character and not LocalPlayer.Character:FindFirstChild("HasBuso") then ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso") end end)
end

local function topos(cf)
    if not getgenv().FarmActive then return end
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        pcall(function() LocalPlayer.Character:PivotTo(cf) end)
    end
end

local function FastAttackOnModel(model, yOffset)
    spawn(function()
        if not model then return end
        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            local prevPlatform = humanoid.PlatformStand
            humanoid.PlatformStand = true
            while model and model.Parent and model:FindFirstChild("Humanoid") and getgenv().FarmActive do
                task.wait(0.1)
                pcall(function()
                    AutoHaki()
                    EquipPreferred()
                    local char = LocalPlayer.Character
                    if not char then return end
                    if model:FindFirstChild("HumanoidRootPart") then
                        model.HumanoidRootPart.CanCollide=false
                        pcall(function() model.Humanoid.WalkSpeed=0 end)
                        local offset = CFrame.new(0,(yOffset or 18),0)
                        topos(model.HumanoidRootPart.CFrame*offset)
                        pcall(function() char.HumanoidRootPart.AssemblyLinearVelocity=Vector3.new(0,0,0) end)
                        local weapon
                        for _,it in ipairs(char:GetChildren()) do if it:IsA("Tool") then weapon=it break end end
                        if weapon and weapon:FindFirstChild("LeftClickRemote") then
                            local dir=(model.HumanoidRootPart.Position-char:GetPivot().Position).Unit
                            pcall(function() weapon.LeftClickRemote:FireServer(dir,1) end)
                        else
                            local atk=ReplicatedStorage.Modules.Net["RE/RegisterAttack"]
                            local hit=ReplicatedStorage.Modules.Net["RE/RegisterHit"]
                            pcall(function()
                                if atk then atk:FireServer(0.1) end
                                if hit and model:FindFirstChild("Head") then hit:FireServer(model.Head,{{model,model.Head}}) end
                            end)
                        end
                    end
                end)
            end
            humanoid.PlatformStand=prevPlatform
        end
    end)
end

local function FarmAndBuyEctoplasmLoop()
    spawn(function()
        while getgenv().FarmActive and HasItem("Hellfire Torch") do
            local args1 = {"Ectoplasm","BuyCheck",4}
            local args2 = {"Ectoplasm","Change",4}
            pcall(function() ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args1)) end)
            task.wait(0.5)
            pcall(function() ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args2)) end)
            task.wait(0.5)
        end
    end)

    while getgenv().FarmActive and HasItem("Hellfire Torch") do
        for _, mobName in ipairs(MMon) do
            if not getgenv().FarmActive then break end
            local sameMobs = {}
            for _, mob in ipairs(Workspace.Enemies:GetChildren()) do
                if mob and mob.Name == mobName and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") then
                    table.insert(sameMobs, mob)
                end
            end

            if #sameMobs > 0 and getgenv().FarmActive then
                local bringPos = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.CFrame or MPos
                for _, mob in ipairs(sameMobs) do
                    spawn(function()
                        pcall(function()
                            mob.HumanoidRootPart.CFrame = bringPos * CFrame.new(math.random(-3,3),0,math.random(-3,3))
                            mob.HumanoidRootPart.CanCollide = false
                            mob.Humanoid.WalkSpeed = 0
                        end)
                    end)
                end

                repeat
                    task.wait(0.1)
                    if not getgenv().FarmActive then break end
                    AutoHaki()
                    EquipPreferred()
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and sameMobs[1] and sameMobs[1]:FindFirstChild("HumanoidRootPart") then
                        topos(sameMobs[1].HumanoidRootPart.CFrame * CFrame.new(0,10,0))
                        pcall(function() LocalPlayer.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0,0,0) end)
                    end
                    for i=#sameMobs,1,-1 do
                        if not sameMobs[i] or not sameMobs[i].Parent or not sameMobs[i]:FindFirstChild("Humanoid") or sameMobs[i].Humanoid.Health<=0 then
                            table.remove(sameMobs,i)
                        end
                    end
                until #sameMobs==0 or not HasItem("Hellfire Torch") or not getgenv().FarmActive
            end
        end
        if not getgenv().FarmActive then break end
        topos(MPos)
        task.wait(0.5)
    end
end

local function jobidAlreadyUsed(id)
    if isfile and isfile(JOBFILE) then
        local s=readfile(JOBFILE)
        for line in s:gmatch("[^\r\n]+") do if line==id then return true end end
    end
    return false
end

local function appendJobId(id)
    if writefile then
        if isfile and isfile(JOBFILE) then
            local s=readfile(JOBFILE)
            if not s:find(id) then writefile(JOBFILE,s.."\n"..id) end
        else
            writefile(JOBFILE,id)
        end
    end
end

local function GetApiBossList()
    local ok,res = pcall(function() return game:HttpGet("https://konmeo22132.vercel.app/api/boss") end)
    if not ok or not res then return {} end
    local ok2,data = pcall(function() return HttpService:JSONDecode(res) end)
    if not ok2 or type(data)~="table" then return {} end
    table.sort(data,function(a,b) return (a.expireTime or 0)>(b.expireTime or 0) end)
    return data
end

local function findMatchingRecords(data,bossName)
    local res={}
    for _,v in ipairs(data) do
        if v and v.Type=="Boss" and v.Name and string.lower(v.Name)==string.lower(bossName) then
            if v.Jobid and v.Jobid~="" and not jobidAlreadyUsed(v.Jobid) then table.insert(res,v) end
        end
    end
    table.sort(res,function(a,b) return (a.expireTime or 0)>(b.expireTime or 0) end)
    return res
end

local function HopToJobInstance(jobid)
    appendJobId(jobid)
    local ok,err=pcall(function() TeleportService:TeleportToPlaceInstance(game.PlaceId,jobid,LocalPlayer) end)
    return ok,err
end

local function TeleportToWorld(placeId)
    pcall(function() TeleportService:Teleport(placeId,LocalPlayer) end)
end

local function parseIsoTime(s)
    if not s then return nil end
    local y,m,d,h,min,sec = s:match("^(%d+)%-(%d+)%-(%d+)T(%d+):(%d+):(%d+)")
    if not y then
        y,m,d,h,min,sec = s:match("^(%d+)%/(%d+)%/(%d+)%s+(%d+):(%d+):(%d+)")
    end
    if not y then return nil end
    local t = {year=tonumber(y), month=tonumber(m), day=tonumber(d), hour=tonumber(h), min=tonumber(min), sec=tonumber(sec)}
    return os.time(t)
end

local function GetRobloxServerList(placeId, limit)
    limit = limit or 100
    local url = "https://games.roblox.com/v1/games/"..tostring(placeId).."/servers/Public?sortOrder=Desc&limit="..tostring(limit)
    local ok,res = pcall(function() return game:HttpGet(url) end)
    if not ok or not res then return {} end
    local ok2,data = pcall(function() return HttpService:JSONDecode(res) end)
    if not ok2 or type(data)~="table" or not data.data then return {} end
    return data.data
end

local function hopFromRobloxApi(placeId)
    local servers = GetRobloxServerList(placeId,100)
    if #servers==0 then return false end
    local cutoff = os.time() - (75*60)
    local candidates = {}
    for _,s in ipairs(servers) do
        local playing = s.playing or s.playCount or s.players or 0
        local maxPlayers = s.maxPlayers or s.max or 0
        local created = parseIsoTime(s.updated) or parseIsoTime(s.created) or parseIsoTime(s.createdAt) or parseIsoTime(s.created_time)
        if created and created <= cutoff and (maxPlayers==0 or (playing < maxPlayers)) then
            table.insert(candidates, s)
        end
    end
    for _,s in ipairs(candidates) do
        local id = s.id or s.guid or s.serverId or s.jobId
        if id then
            local ok,err = pcall(function() TeleportService:TeleportToPlaceInstance(placeId,tostring(id),LocalPlayer) end)
            if ok then return true end
            task.wait(0.6)
        end
    end
    return false
end

local function hopFromBossApiWithTimeout(timeoutSec)
    uiSetStatus("Fetching API...")
    local startTick = tick()
    while getgenv().FarmActive and tick()-startTick < timeoutSec do
        local data = GetApiBossList()
        if #data>0 then
            local recs = findMatchingRecords(data,getgenv().Config.Boss)
            for _,rec in ipairs(recs) do
                if not getgenv().FarmActive then return false end
                if rec.Jobid and rec.Jobid~="" and not jobidAlreadyUsed(rec.Jobid) then
                    uiSetFoundServer(rec.Jobid,rec.Server or "Unknown")
                    local ok,err = HopToJobInstance(rec.Jobid)
                    if ok then return true end
                end
                if tick()-startTick >= timeoutSec then break end
                task.wait(0.6)
            end
        end
        task.wait(1)
    end
    return false
end

local function findMatchingRecordsAndHop()
    local ok = hopFromBossApiWithTimeout(30)
    if ok then return true end
    if not getgenv().FarmActive then return false end
    local robOk = hopFromRobloxApi(game.PlaceId)
    return robOk
end

local function ensureWorldAndHop()
    local targetW=targetWorldForBoss(getgenv().Config.Boss)
    if targetW then
        local cw=currentWorld()
        if cw~=targetW then
            uiSetStatus("Teleporting to "..targetW)
            local pid=PLACE_WORLD[targetW]
            if pid then TeleportToWorld(pid) return true end
        end
    end
    local ok = findMatchingRecordsAndHop()
    if not ok and getgenv().FarmActive then
        local rob = hopFromRobloxApi(game.PlaceId)
        return rob
    end
    return ok
end

local function uiCreate()
    if CoreGui:FindFirstChild("HuneIPA_HopBoss_UI") then pcall(function() CoreGui:FindFirstChild("HuneIPA_HopBoss_UI"):Destroy() end) end
    local gui = Instance.new("ScreenGui")
    gui.ResetOnSpawn=false
    gui.IgnoreGuiInset=true
    gui.Name="HuneIPA_HopBoss_UI"
    local outer=Instance.new("Frame",gui)
    outer.Size=UDim2.new(0,340,0,150)
    outer.Position=UDim2.new(0.5,-170,0.02,0)
    outer.BackgroundColor3=Color3.fromRGB(34,177,76)
    outer.BorderSizePixel=0
    local outerCorner=Instance.new("UICorner",outer)
    outerCorner.CornerRadius=UDim.new(0,10)
    local inner=Instance.new("Frame",outer)
    inner.Size=UDim2.new(1,-8,1,-8)
    inner.Position=UDim2.new(0,4,0,4)
    inner.BackgroundColor3=Color3.fromRGB(30,30,30)
    inner.BackgroundTransparency=0.35
    inner.BorderSizePixel=0
    local innerCorner=Instance.new("UICorner",inner)
    innerCorner.CornerRadius=UDim.new(0,8)
    local title=Instance.new("TextLabel",inner)
    title.Size=UDim2.new(1,-10,0,28)
    title.Position=UDim2.new(0,5,0,4)
    title.Text="HuneIPA - Hop Boss"
    title.TextColor3=Color3.fromRGB(34,177,76)
    title.BackgroundTransparency=1
    title.TextStrokeTransparency=0
    title.TextStrokeColor3=Color3.fromRGB(0,0,0)
    title.Font=Enum.Font.SourceSansBold
    title.TextSize=18
    local bossLabel=Instance.new("TextLabel",inner)
    bossLabel.Size=UDim2.new(1,-10,0,22)
    bossLabel.Position=UDim2.new(0,5,0,36)
    bossLabel.Text="Boss: "..tostring(getgenv().Config.Boss)
    bossLabel.TextColor3=Color3.fromRGB(34,177,76)
    bossLabel.BackgroundTransparency=1
    bossLabel.TextStrokeTransparency=0
    bossLabel.TextStrokeColor3=Color3.fromRGB(0,0,0)
    bossLabel.Font=Enum.Font.SourceSans
    bossLabel.TextSize=16
    local status=Instance.new("TextLabel",inner)
    status.Size=UDim2.new(1,-10,0,56)
    status.Position=UDim2.new(0,5,0,60)
    status.Text="Status: Idle"
    status.TextColor3=Color3.fromRGB(34,177,76)
    status.BackgroundTransparency=1
    status.TextWrapped=true
    status.TextStrokeTransparency=0
    status.TextStrokeColor3=Color3.fromRGB(0,0,0)
    status.Font=Enum.Font.SourceSans
    status.TextSize=14

    local btn = Instance.new("TextButton", inner)
    btn.Size = UDim2.new(0,60,0,60)
    btn.Position = UDim2.new(1,-70,0,10)
    btn.AnchorPoint = Vector2.new(0,0)
    btn.BackgroundColor3 = Color3.fromRGB(0,0,0)
    btn.Text = (getgenv().FarmActive and "Stop" or "Start")
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.TextStrokeTransparency = 0
    btn.TextStrokeColor3 = Color3.fromRGB(0,0,0)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 16
    btn.AutoButtonColor = true
    local btnCorner = Instance.new("UICorner", btn)
    btnCorner.CornerRadius = UDim.new(1,0)
    local btnStroke = Instance.new("UIStroke", btn)
    btnStroke.Color = Color3.fromRGB(0,0,0)
    btnStroke.Thickness = 3

    local dragging, dragInput, dragStart, startPos
    btn.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = btn.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    btn.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    local UserInputService = game:GetService("UserInputService")
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            btn.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    btn.MouseButton1Click:Connect(function()
        if getgenv().FarmActive then
            getgenv().FarmActive = false
            btn.Text = "Start"
        else
            getgenv().FarmActive = true
            btn.Text = "Stop"
        end
    end)

    gui.Parent=CoreGui
    return {Gui=gui,Outer=outer,Inner=inner,Title=title,BossLabel=bossLabel,Status=status,Button=btn}
end

local UI_OBJ=uiCreate()
local function uiSetStatus(s)
    pcall(function() UI_OBJ.Status.Text="Status: "..s end)
end

local function uiSetFoundServer(jobid,serverName)
    pcall(function()
        UI_OBJ.Status.Text="Found server. Hopping"
        local t=Instance.new("TextLabel",UI_OBJ.Inner)
        t.Size=UDim2.new(1,-10,0,20)
        t.Position=UDim2.new(0,5,0,116)
        t.Text="Jobid (New server): "..tostring(jobid).." | Server: "..tostring(serverName)
        t.TextColor3=Color3.fromRGB(34,177,76)
        t.BackgroundTransparency=1
        t.TextWrapped=true
        t.TextSize=12
        t.Font=Enum.Font.SourceSans
        t.TextStrokeTransparency=0
        t.TextStrokeColor3=Color3.fromRGB(0,0,0)
        delay(6,function() pcall(function() t:Destroy() end) end)
    end)
end

local function TrySelectTeam(teamName)
    if not teamName then return end
    uiSetStatus("Joining team...")
    for i=1,8 do
        pcall(function()
            if ReplicatedStorage and ReplicatedStorage.Remotes and ReplicatedStorage.Remotes.CommF_ then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam",tostring(teamName))
            end
        end)
        task.wait(0.6)
        if LocalPlayer.Team and LocalPlayer.Team.Name==tostring(teamName) then
            uiSetStatus("Team joined: "..tostring(teamName))
            return true
        end
    end
    uiSetStatus("Team join failed")
    return false
end

TrySelectTeam(getgenv().Team)

spawn(function()
    local start=tick()
    while task.wait(0.1) and tick()-start<=5 do
        if not getgenv().FarmActive then task.wait(0.1) else topos(CFrame.new(923,125,32853)) end
    end
end)

spawn(function()
    task.wait(5)
    local foundBoss=false
    for i=1,10 do
        local b=Workspace.Enemies:FindFirstChild("Cursed Captain")
        if b and b.Parent then foundBoss=true break end
        task.wait(1)
    end
    if not foundBoss and not HasItem("Hellfire Torch") and getgenv().FarmActive then
        ensureWorldAndHop()
    end
end)

spawn(function()
    while task.wait(0.8) do
        if not getgenv().FarmActive then uiSetStatus("Paused") while not getgenv().FarmActive do task.wait(0.3) end end
        if HasItem("Hellfire Torch") and getgenv().FarmActive then
            uiSetStatus("Farm Ectoplasm...")
            FarmAndBuyEctoplasmLoop()
            if not HasItem("Hellfire Torch") then
                ensureWorldAndHop()
            end
        else
            local bossName=tostring(getgenv().Config.Boss)
            if currentWorld()=="World2" and string.find(string.lower(bossName),"cursed") then
                local b=Workspace.Enemies:FindFirstChild("Cursed Captain")
                if b and b.Parent and getgenv().FarmActive then
                    uiSetStatus("Attack boss")
                    FastAttackOnModel(b,45)
                    repeat task.wait(1) until not b or not b.Parent or not getgenv().FarmActive
                    if HasItem("Hellfire Torch") and getgenv().FarmActive then
                        uiSetStatus("Farm Ectoplasm...")
                        FarmAndBuyEctoplasmLoop()
                    end
                    if not HasItem("Hellfire Torch") and getgenv().FarmActive then
                        ensureWorldAndHop()
                    end
                end
            end
        end
    end
end)
